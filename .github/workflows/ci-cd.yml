name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Frontend Tests and Build
  frontend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ai-academy-react/package-lock.json

    - name: Install dependencies
      working-directory: ./ai-academy-react
      run: npm ci

    - name: Build frontend
      working-directory: ./ai-academy-react
      run: npm run build
      env:
        VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: ai-academy-react/dist

  # Backend Tests
  backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: istudy_test
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: istudy_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
        cache-dependency-path: ai-academy-backend/requirements.txt

    - name: Install dependencies
      working-directory: ./ai-academy-backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run migrations
      working-directory: ./ai-academy-backend
      run: python manage.py migrate
      env:
        DATABASE_URL: postgresql://istudy_test:test_password@localhost:5432/istudy_test
        SECRET_KEY: test-secret-key-for-ci
        DEBUG: True

    - name: Check Django configuration
      working-directory: ./ai-academy-backend
      run: python manage.py check
      env:
        DATABASE_URL: postgresql://istudy_test:test_password@localhost:5432/istudy_test
        SECRET_KEY: test-secret-key-for-ci

  # Docker Build Test
  docker:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Build Backend Docker image
      run: docker build -t istudy-backend ./ai-academy-backend

    - name: Build Frontend Docker image
      run: docker build -t istudy-frontend ./ai-academy-react
